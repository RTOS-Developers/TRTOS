/**
  @page EXTI_Example EXTI Configuration Example
  
  @verbatim
  ******************** (C) COPYRIGHT 2015 STMicroelectronics *******************
  * @file    EXTI/EXTI_Example/readme.txt 
  * @author  MCD Application Team
  * @version V1.2.1
  * @date    20-April-2015
  * @brief   Description of the EXTI example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
   @endverbatim

@par Example Description 

This example shows how to configure external interrupt lines.
In this example, 4 EXTI lines (EXTI0, EXTI8, EXTI9 and EXTI10) when using the STM32L152-EVAL 
or (EXTI0, EXTI8, EXTI11 and EXTI13) when using the STM32L152D-EVAL are configured to generate
an interrupt on each falling edge. In the interrupt routine a led connected to a specific
PIO pin is toggled.

In this example
  (when using the STM32L152-EVAL):
    - EXTI0  is mapped to PA0
    - EXTI8  is mapped to PE8 
    - EXTI9  is mapped to PE9  
    - EXTI10 is mapped to PE10
  (when using the STM32L152D-EVAL):
    - EXTI0  is mapped to PA0
    - EXTI8  is mapped to PG8 
    - EXTI11 is mapped to PG11
    - EXTI13 is mapped to PG13

After EXTI configuration, a software interrupt is generated on the EXTI0 toggles LED1.
After that,
  when falling edge is detected on EXTI0, LED1 toggles
  when falling edge is detected on EXTI8, LED2 toggles
  when falling edge is detected on EXTI9  (when using the STM32L152-EVAL) or EXTI11 (when using the STM32L152D-EVAL), LED3 toggles
  when falling edge is detected on EXTI10 (when using the STM32L152-EVAL) or EXTI13 (when using the STM32L152D-EVAL), LED4 toggles

If STM32L152-EVAL or STM32L152D-EVAL is used,
  when Key push-button is pressed, LED1 toggles
  when Joystick Sel push-button is pressed, LED2 toggles
  when Joystick Up push-button is pressed, LED3 toggles
  when Joystick Down push-button is pressed, LED4 toggles

In this example, EXTI0_Config() function can be substituted by 
STM_EVAL_PBInit(Button_KEY, Mode_EXTI) provided in the STM32L1XX-EVAL driver.

@par Directory contents 

  - EXTI/EXTI_Example/stm32l1xx_conf.h    Library Configuration file
  - EXTI/EXTI_Example/stm32l1xx_it.h      Interrupt handlers header file
  - EXTI/EXTI_Example/stm32l1xx_it.c      Interrupt handlers
  - EXTI/EXTI_Example/main.c              Main program
  - EXTI/EXTI_Example/system_stm32l1xx.c  STM32L1xx system source file

@note The "system_stm32l1xx.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32L1xx_Clock_Configuration_V1.1.0.xls" 
      provided with the AN3309 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>
         
@par Hardware and Software environment

  - This example runs on STM32L1xx Ultra Low Power High-, Medium-Density and Medium-Density Plus Devices.

  - This example has been tested with STMicroelectronics STM32L152D-EVAL (STM32L1xx 
    Ultra Low Power High-Density) and STM32L152-EVAL (STM32L1xx Ultra Low 
    Power Medium-Density) evaluation board and can be easily tailored to any 
    other supported device and development board.


  - STM32L152-EVAL Set-up  
    - Use LD1 led connected to PD0 pin
    - Use LD2 led connected to PD1 pin
    - Use LD3 led connected to PD4 pin
    - Use LD4 led connected to PD5 pin
    - Use the Key push-button connected to pin PA0 (EXTI Line0)
    - Use the Joystick Sel push-button connected to pin PE8 (EXTI Line8)
    - Use the Joystick Up push-button connected to pin PE9 (EXTI Line9)
    - Use the Joystick Down push-button connected to pin PE10 (EXTI Line10)
    @Note make sure that JP18 and JP19 are fitted

  - STM32L152D-EVAL Set-up  
    - Use LD1 led connected to PD3  pin
    - Use LD2 led connected to PD7  pin
    - Use LD3 led connected to PG14 pin
    - Use LD4 led connected to PG15 pin
    - Use the Key push-button connected to pin PA0 (EXTI Line0)
    - Use the Joystick Sel push-button connected to pin PG8 (EXTI Line8)
    - Use the Joystick Up push-button connected to pin PG11 (EXTI Line11)
    - Use the Joystick Down push-button connected to pin PG13 (EXTI Line13)

@par How to use it ? 

In order to make the program work, you must do the following:
 - Copy all source files from this example folder to the template folder under
   Project\STM32L1xx_StdPeriph_Templates
 - Open your preferred toolchain
 - If the used device is STM32L1XX_MD choose "STM32L1XX_MD(STM32L1xxxBxx)" workspace
    - Add the following files to the project source list
       - Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval.c
 - If the used device is STM32L1XX_HD choose "STM32L1XX_HD(STM32L1xxxDxx)" workspace
    - Add the following files to the project source list
       - Utilities\STM32_EVAL\STM32L152D_EVAL\stm32l152d_eval.c 
 - Rebuild all files and load your image into target memory
 - Run the example

@note
- Ultra Low Power Medium-density devices: - STM32L151x6xx, STM32L151x8xx, STM32L151xBxx, STM32L152x6xx,
                                            STM32L152x8xx, STM32L152xBxx, STM32L151x6xxA, STM32L151x8xxA,
                                            STM32L151xBxxA, STM32L152x6xxA, STM32L152x8xxA and STM32L152xBxxA
                                          - STM32L100x6xx, STM32L100x8xx and STM32L100xBxx
- Ultra Low Power Medium-density Plus devices: - STM32L151xCxx, STM32L152xCxx and STM32L162xCxx 
                                               - STM32L100xCxx
- Ultra Low Power High-density devices: STM32L151xDxx, STM32L152xDxx and STM32L162xDxx
- Ultra Low Power XL-density devices: STM32L151xExx, STM32L152xExx and STM32L162xExx

 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */



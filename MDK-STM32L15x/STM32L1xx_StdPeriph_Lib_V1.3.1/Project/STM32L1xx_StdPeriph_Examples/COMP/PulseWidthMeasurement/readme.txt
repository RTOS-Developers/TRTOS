/**
  @page PulseWidthMeasurement COMP2 Pulse width measurement example
  
  @verbatim
  ******************** (C) COPYRIGHT 2015 STMicroelectronics *******************
  * @file    COMP/PulseWidthMeasurement/readme.txt 
  * @author  MCD Application Team
  * @version V1.2.1
  * @date    20-April-2015
  * @brief   Description of the COMP2 Pulse width measurement example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
   @endverbatim

@par Example Description 

  This example shows how to configure the COMP2 peripheral to measure pulse width.
  This method (measuring signal pulse using comparator is interesting when
  external signal doesn't respect the VIL and VIH levels).

  - COMP2 is configured as following:
     - Inverting input is internally connected to DAC2 output
     - Non Inverting input is connected to PB5
     - Output is internally connected to TIM2 Input Capture 4 (IC4)

  - DAC channel 2 is used as a digital threshold for measurement, DAC2 output
    is internally connected to COMP2 inverting input. 
    DAC2 is configured in 12-bit right alignment. DAC2 output = VREF * DOR / 4095
                                                               = 3.3 * 868 / 4095
                                                               = 0.7V

    In this example, the pulse of an external signal of around 0.7V 
    (e.g. high level = 0.8V and low level = 0.6V) can be performed.

  - TIM2 counter is clocked by TIM2CLK = 32MHz, TIM2 channel 4 is configured in
    input capture mode.
    TIM2 counter is captured at each transition detection: rising or falling edges
    (each time COMP2 inverting input crosses DAC2 output)

  - External signal should be connected to PB5 (RV3 potentiometer can be used). 
    Pulse is computed in microsecond then displayed on Glass LCD and Color LCD 
    for STM32L152-EVAL and only on Color LCD for STM32L152D-EVAL.
    Pulse duration shouldn't be higher than 65535 * TIM2CLK = 2.047 ms
    Pulse duration shouldn't be lower than TIM2 ISR processing time / TIM2CLK 
                                         ~ 110 (clock cycle) / 32 MHz = 3 us


@par Directory contents 

  - COMP/PulseWidthMeasurement/stm32l1xx_conf.h     Library Configuration file
  - COMP/PulseWidthMeasurement/stm32l1xx_it.c       Interrupt handlers
  - COMP/PulseWidthMeasurement/stm32l1xx_it.h       Header for stm32l1xx_it.c
  - COMP/PulseWidthMeasurement/main.c               Main program
  - COMP/PulseWidthMeasurement/system_stm32l1xx.c   STM32L1xx system source file

@note The "system_stm32l1xx.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32L1xx_Clock_Configuration_V1.1.0.xls" 
      provided with the AN3309 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>

@par Hardware and Software environment

  - This example runs on STM32L1xx Ultra Low Power High-, Medium-Density and Medium-Density Plus Devices.

  - This example has been tested with STMicroelectronics STM32L152D-EVAL (STM32L1xx 
    Ultra Low Power High-Density) and STM32L152-EVAL (STM32L1xx Ultra Low 
    Power Medium-Density) evaluation board and can be easily tailored to any 
    other supported device and development board.


@par How to use it ? 

In order to make the program work, you must do the following:
 - Copy all source files from this example folder to the template folder under
   Project\STM32L1xx_StdPeriph_Templates
 - Open your preferred toolchain
 - If the used device is STM32L1XX_MD choose "STM32L1XX_MD(STM32L1xxxBxx)" workspace
    - Add the following files to the project source list
       - Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval.c
       - Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_lcd.c       
       - Utilities\STM32_EVAL\STM32L152_EVAL\stm32l152_eval_glass_lcd.c
 - If the used device is STM32L1XX_HD choose "STM32L1XX_HD(STM32L1xxxDxx)" workspace
    - Add the following files to the project source list
       - Utilities\STM32_EVAL\STM32L152D_EVAL\stm32l152d_eval.c
       - Utilities\STM32_EVAL\STM32L152D_EVAL\stm32l152d_eval_lcd.c        
       - Utilities\STM32_EVAL\STM32L152D_EVAL\stm32l152d_eval_glass_lcd.c
 - Rebuild all files and load your image into target memory
 - Run the example
 - Connect external signal to PB5 (Potentiometer)
 - The measured pulse width is displayed on Glass LCD and Color LCD for STM32L152-EVAL
   and only on Color LCD for STM32L152D-EVAL.

@note
- Ultra Low Power Medium-density devices: - STM32L151x6xx, STM32L151x8xx, STM32L151xBxx, STM32L152x6xx,
                                            STM32L152x8xx, STM32L152xBxx, STM32L151x6xxA, STM32L151x8xxA,
                                            STM32L151xBxxA, STM32L152x6xxA, STM32L152x8xxA and STM32L152xBxxA
                                          - STM32L100x6xx, STM32L100x8xx and STM32L100xBxx
- Ultra Low Power Medium-density Plus devices: - STM32L151xCxx, STM32L152xCxx and STM32L162xCxx 
                                               - STM32L100xCxx
- Ultra Low Power High-density devices: STM32L151xDxx, STM32L152xDxx and STM32L162xDxx
- Ultra Low Power XL-density devices: STM32L151xExx, STM32L152xExx and STM32L162xExx
    
 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */


